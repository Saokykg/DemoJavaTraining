openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: >-
    Solr is an open-source search platform that allows you to easily create and
    manage search applications. It is built on top of Apache Lucene, a powerful
    and high-performance Java search engine library.


    Solr 8.11 provides a RESTful API that allows developers to interact with
    Solr using standard HTTP requests. One way to interact with the Solr API is
    through Swagger UI, a graphical interface that allows you to explore and
    test the Solr API.


    The Solr 8.11 Swagger API provides documentation for the Solr REST API,
    allowing developers to easily understand and use the API. The API is
    organized by resource and method, and each resource and method is described
    with detailed documentation, including input parameters, output formats, and
    examples.


    With the Solr 8.11 Swagger API, developers can quickly build powerful search
    applications that can search, index, and analyze large amounts of data with
    ease. The API also provides advanced features such as faceting,
    highlighting, and spatial search, making it a powerful tool for building
    search applications.
  version: 1.0.11
servers:
  - url: https://replace_host_url
tags:
  - name: Replica Management
    description: >-
      A replica is a physical copy of a shard.
    externalDocs:
      description: Find out more
      url: https://solr.apache.org/guide/8_11/replica-management.html
components:
  securitySchemes:
    auth:
      type: apiKey
      in: header
      name: Authorization
security:
  - auth: []
paths:
  /admin/collections?action=ADDREPLICA:
    get:
      tags:
      - Replica Management
      summary: Add Replica
      description: |
        Add one or more replicas to a shard in a collection. The node name can be specified if the replica is to be created in a specific node. Otherwise, a set of nodes can be specified and the most suitable ones among them will be chosen to create the replica(s).
      operationId: addReplica
      parameters:
        - name: collection
          in: query
          description: |
            The name of the collection where the replica should be created. This parameter is required.
          required: true
          schema:
            type: string
        - name: shard
          in: query
          description: |
            The name of the shard to which replica is to be added.

            If shard is not specified, then _route_ must be.
          required: false
          schema:
            type: string
        - name: _route_
          in: query
          description: |
            If the exact shard name is not known, users may pass the _route_ value and the system would identify the name of the shard.

            Ignored if the shard parameter is also specified.
          required: false
          schema:
            type: string
        - name: node
          in: query
          description: |
            The name of the node where the replica should be created (optional).
          required: false
          schema:
            type: string
        - name: createNodeSet
          in: query
          description: |
            A comma-separated list of nodes among which the best ones will be chosen to place the replicas (optional)

            The format is a comma-separated list of node_names, such as localhost:8983_solr,localhost:8984_solr,localhost:8985_solr.
          required: false
          schema:
            type: string
        - name: instanceDir
          in: query
          description: |
            The instanceDir for the core that will be created.
          required: false
          schema:
            type: string
        - name: dataDir
          in: query
          description: |
            The directory in which the core should be created.
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: |
            The type of replica to create. These possible values are allowed:
            
            nrt: The NRT type maintains a transaction log and updates its index locally. This is the default and the most commonly used.
            
            tlog: The TLOG type maintains a transaction log but only updates its index via replication.
            
            pull: The PULL type does not maintain a transaction log and only updates its index via replication. This type is not eligible to become a leader.
          required: false
          schema:
            type: string
        - name: nrtReplicas
          in: query
          description: |
            The number of nrt replicas that should be created (optional, defaults to 1 if type is nrt otherwise 0).
          required: false
          schema:
            type: string
        - name: tlogReplicas
          in: query
          description: |
            The number of tlog replicas that should be created (optional, defaults to 1 if type is tlog otherwise 0).
          required: false
          schema:
            type: string
        - name: pullReplicas
          in: query
          description: |
            The number of pull replicas that should be created (optional, defaults to 1 if type is pull otherwise 0).
          required: false
          schema:
            type: string
        - name: property.name=value
          in: query
          description: |
            Set core property name to value. See Defining core.properties for details about supported properties and values.
          required: false
          schema:
            type: string
        - name: waitForFinalState
          in: query
          description: |
            If true, the request will complete only when all affected replicas become active. The default is false, which means that the API will return the status of the single action, which may be before the new replica is online and active.
          required: false
          schema:
            type: boolean
        - name: async
          in: query
          description: |
            Set core property name to value. See Defining core.properties for details about supported properties and values.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '404':
          description: Not found
        '405':
          description: Validation exception
  /admin/collections?action=MOVEREPLICA:
    get:
      tags:
      - Replica Management
      summary: Move a Replica to a New Node
      description: |
        This command moves a replica from one node to another node by executing ADDREPLICA on the destination and then DELETEREPLICA on the source. If this command is interrupted or times out before the ADDREPLICA operation produces a replica in an active state, the DELETEREPLICA will not occur. Timeouts do not cancel the ADDREPLICA, and will result in extra shards. In case of shared filesystems the dataDir will be reused.

        If this command is used on a collection where more than one replica from the same shard exists on the same node, and the shard and sourceNode parameters match more than one replica, the replica selected is not deterministic (currently itâ€™s random).
      operationId: moveReplica
      parameters:
        - name: collection
          in: query
          description: |
            The name of the collection. This parameter is required.
          required: true
          schema:
            type: string
        - name: targetNode
          in: query
          description: |
            The name of the destination node. This parameter is required.
          required: true
          schema:
            type: string
        - name: sourceNode
          in: query
          description: |
            The name of the node that contains the replica to move. This parameter is required unless replica is specified. If replica is specified this parameter is ignored.
          required: false
          schema:
            type: string
        - name: shard
          in: query
          description: |
            The name of the shard for which a replica should be moved. This parameter is required unless replica is specified. If replica is specified, this parameter is ignored.
          required: false
          schema:
            type: string
        - name: replica
          in: query
          description: |
            The name of the replica to move. This parameter is required unless shard and sourceNode are specified, however this parameter has precedence over those two parameters.
          required: false
          schema:
            type: string
        - name: timeout
          in: query
          description: |
            The number of seconds to wait for the replica to be live in the new location before deleting the replica in the old location. Defaults to 600 seconds. Deletion will not occur and creation will not be rolled back in the event of a timeout, potentially leaving an extra replica. Presently, this parameter is ignored if the replica is an hdfs replica.
          required: false
          schema:
            type: string
        - name: inPlaceMove
          in: query
          description: |
            For replicas that use shared filesystems allow 'in-place' move that reuses shared data. Defaults to true, but is ignored if the replica does not have the property shared_storage with a value of true
          required: false
          schema:
            type: string
        - name: async
          in: query
          description: |
            Request ID to track this action which will be processed asynchronously.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '404':
          description: Not found
        '405':
          description: Validation exception
  /admin/collections?action=DELETEREPLICA :
    get:
      tags:
      - Replica Management
      summary: Delete a Replica
      description: |
        Deletes a named replica from the specified collection and shard.
        
        If the corresponding core is up and running the core is unloaded, the entry is removed from the clusterstate, and (by default) delete the instanceDir and dataDir. If the node/core is down, the entry is taken off the clusterstate and if the core comes up later it is automatically unregistered.
      operationId: deleteReplica
      parameters:
        - name: collection
          in: query
          description: |
            The name of the collection. This parameter is required.
          required: true
          schema:
            type: string
        - name: shard
          in: query
          description: |
            The name of the shard that includes the replica to be removed. This parameter is required.
          required: true
          schema:
            type: string
        - name: replica
          in: query
          description: |
            The name of the node that contains the replica to move. This parameter is required unless replica is specified. If replica is specified this parameter is ignored.
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: |
            The number of replicas to remove. If the requested number exceeds the number of replicas, no replicas will be deleted. If there is only one replica, it will not be removed.
            
            If replica is used instead, this parameter is not required. Otherwise, this parameter must be supplied.
          required: false
          schema:
            type: string
        - name: deleteInstanceDir
          in: query
          description: |
            By default Solr will delete the entire instanceDir of the replica that is deleted. Set this to false to prevent the instance directory from being deleted.
          required: false
          schema:
            type: string
        - name: deleteDataDir
          in: query
          description: |
            By default Solr will delete the dataDir of the replica that is deleted. Set this to false to prevent the data directory from being deleted.
          required: false
          schema:
            type: string
        - name: deleteIndex
          in: query
          description: |
            By default Solr will delete the index of the replica that is deleted. Set this to false to prevent the index directory from being deleted.
          required: false
          schema:
            type: string
        - name: onlyIfDown
          in: query
          description: |
            When set to true, no action will be taken if the replica is active. Default false.
          required: false
          schema:
            type: string
        - name: async
          in: query
          description: |
            Request ID to track this action which will be processed asynchronously.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '404':
          description: Not found
        '405':
          description: Validation exception
  /admin/collections?action=ADDREPLICAPROP :
    get:
      tags:
      - Replica Management
      summary: Add Replica Property
      description: |
        Assign an arbitrary property to a particular replica and give it the value specified. If the property already exists, it will be overwritten with the new value.
      operationId: addReplicaProp
      parameters:
        - name: collection
          in: query
          description: |
            The name of the collection the replica belongs to. This parameter is required.
          required: true
          schema:
            type: string
        - name: shard
          in: query
          description: |
            The name of the shard the replica belongs to. This parameter is required
          required: true
          schema:
            type: string
        - name: replica
          in: query
          description: |
            The replica, e.g., core_node1. This parameter is required.
          required: false
          schema:
            type: string
        - name: property
          in: query
          description: |
            The name of the property to add. This property is required.

            This will have the literal property. prepended to distinguish it from system-maintained properties. So these two forms are equivalent:

            property=special and property=property.special
          required: false
          schema:
            type: string
        - name: property.value
          in: query
          description: |
            The value to assign to the property. This parameter is required.
          required: true
          schema:
            type: string
        - name: shardUnique
          in: query
          description: |
            If true, then setting this property in one replica will remove the property from all other replicas in that shard. The default is false.

            There is one pre-defined property preferredLeader for which shardUnique is forced to true and an error returned if shardUnique is explicitly set to false.
            
            PreferredLeader is a boolean property. Any value assigned that is not equal (case insensitive) to true will be interpreted as false for preferredLeader.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '404':
          description: Not found
        '405':
          description: Validation exception
  /admin/collections?action=DELETEREPLICAPROP:
    get:
      tags:
      - Replica Management
      summary: DELETEREPLICAPROP
      description: |
        Deletes an arbitrary property from a particular replica.
      operationId: deleteReplicaProp
      parameters:
        - name: collection
          in: query
          description: |
            The name of the collection the replica belongs to. This parameter is required.
          required: true
          schema:
            type: string
        - name: shard
          in: query
          description: |
            The name of the shard the replica belongs to. This parameter is required
          required: true
          schema:
            type: string
        - name: replica
          in: query
          description: |
            The replica, e.g., core_node1. This parameter is required.
          required: true
          schema:
            type: string
        - name: property
          in: query
          description: |
            The name of the property to add. This property is required.

            This will have the literal property. prepended to distinguish it from system-maintained properties. So these two forms are equivalent:

            property=special and property=property.special
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '404':
          description: Not found
        '405':
          description: Validation exception
